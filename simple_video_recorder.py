{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "93a7496f-8816-4711-9343-79ae44054f3a",
   "metadata": {},
   "outputs": [],
   "source": [
    "import cv2 as cv\n",
    "import numpy as np\n",
    "\n",
    "# 천안시 교통정보 CCTV - 고속철 입구\n",
    "video = cv.VideoCapture('http://210.99.70.120:1935/live/cctv023.stream/playlist.m3u8')\n",
    "\n",
    "# 밝기 조절 변수\n",
    "brightness = 1.0\n",
    "\n",
    "while video.isOpened():\n",
    "    valid, img = video.read()\n",
    "    if not valid:\n",
    "        break\n",
    "    \n",
    "    # 밝기 조정 적용\n",
    "    img = cv.convertScaleAbs(img, alpha=brightness, beta=0)\n",
    "    \n",
    "    cv.imshow('video', img)\n",
    "    \n",
    "    key = cv.waitKey(1)\n",
    "    if key == ord(' '):\n",
    "        # 녹화 시작\n",
    "        target = cv.VideoWriter()\n",
    "        target_format = 'mp4'\n",
    "        target_fourcc = 'XVID'\n",
    "        target_file = 'RecordedVideo' + '.' + target_format\n",
    "        h, w, *_ = img.shape\n",
    "        target.open(target_file, cv.VideoWriter_fourcc(*target_fourcc), 30, (w, h))\n",
    "\n",
    "        while video.isOpened():\n",
    "            valid, img = video.read()\n",
    "            if not valid:\n",
    "                break\n",
    "\n",
    "            # 밝기 조정 적용\n",
    "            img = cv.convertScaleAbs(img, alpha=brightness, beta=0)\n",
    "            target.write(img)\n",
    "\n",
    "            # 녹화중 표시(붉은 원)\n",
    "            center = (25, 25)\n",
    "            cv.circle(img, center, radius=10, color=(0,0,255), thickness=-1)\n",
    "            cv.imshow('video', img)\n",
    "\n",
    "            # 녹화 종료\n",
    "            if cv.waitKey(1) == ord(' '):\n",
    "                target.release()\n",
    "                break\n",
    "\n",
    "    # 밝기 증가 (최대 3.0)\n",
    "    elif key == ord('<'):\n",
    "        brightness = min(brightness + 0.1, 3.0)\n",
    "\n",
    "    # 밝기 감소 (최소 0.1)\n",
    "    elif key == ord('>'):\n",
    "        brightness = max(brightness - 0.1, 0.1)\n",
    "    \n",
    "    elif key == 27:\n",
    "        break\n",
    "\n",
    "video.release()\n",
    "cv.destroyAllWindows()\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python [conda env:base] *",
   "language": "python",
   "name": "conda-base-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
